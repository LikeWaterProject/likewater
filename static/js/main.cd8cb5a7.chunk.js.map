{"version":3,"sources":["components/MapView.js","components/TopSheet.js","components/BottomSheet.js","components/App.js","reducers/eventsReducer.js","api/index.js","reducers/preferencesReducer.js","actions/types.js","reducers/index.js","serviceWorker.js","index.js"],"names":["Map","ReactMapboxGl","accessToken","defaultZoom","volumetricPainter","type","property","data","mentions","lastMention","location","connect","state","preferences","position","onClick","useWindowSize","width","height","showVolumetricBuildings","showBasicMapFeatures","style","center","zoom","containerStyle","onDragStart","onDragEnd","id","sourceId","sourceLayer","filter","minZoom","paint","layout","map","el","index","key","coordinates","properties","TopSheet","visible","Sidebar","as","Segment","inverted","raised","direction","animation","textAlign","Search","EventList","React","lazy","withRouter","useLocation","history","useHistory","handleNavigate","route","push","padding","className","Menu","compact","pointing","secondary","size","widths","icon","Item","name","active","pathname","exact","path","fallback","Dimmer","Loader","minHeight","content","events","useState","defaultPosition","setPosition","controlsVisible","setControlsVisible","useEffect","navigator","geolocation","getCurrentPosition","geolocationPosition","coords","longitude","latitude","console","error","enableHighAccuracy","maximumAge","timeout","Pushable","Pusher","event","log","v","INITIAL_STATE","axios","create","baseURL","dangerClose","nearbyEvents","JSON","parse","localStorage","getItem","eventFilter","rootReducer","combineReducers","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Boolean","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.cd8cb5a7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useWindowSize } from \"react-use\";\r\nimport ReactMapboxGl, { Layer, Feature } from \"react-mapbox-gl\";\r\nimport { Icon } from \"semantic-ui-react\";\r\n\r\nconst Map = ReactMapboxGl({\r\n  accessToken:\r\n    \"pk.eyJ1IjoicmVrdGRlY2thcmQiLCJhIjoiY2theWJ4OXM0MGhiejJ3cnkzcmk0andiYyJ9.IinlG0vyUvcWhvlAREJXeA\",\r\n});\r\n\r\nconst defaultZoom = [10];\r\nconst volumetricPainter = {\r\n  \"fill-extrusion-color\": \"#424d5c\",\r\n  \"fill-extrusion-height\": {\r\n    type: \"identity\",\r\n    property: \"height\",\r\n  },\r\n  \"fill-extrusion-base\": {\r\n    type: \"identity\",\r\n    property: \"min_height\",\r\n  },\r\n  \"fill-extrusion-opacity\": 0.6,\r\n};\r\n\r\nconst data = [\r\n  {\r\n    mentions: 248 / 50,\r\n    lastMention: 1591135064030,\r\n    location: [-73.978698, 40.685457],\r\n  },\r\n  {\r\n    mentions: 61 / 50,\r\n    lastMention: 1591135010000,\r\n    location: [-74.011379, 40.708201],\r\n  },\r\n  {\r\n    mentions: 120 / 50,\r\n    lastMention: 1591134911238,\r\n    location: [-73.987529, 40.752137],\r\n  },\r\n];\r\n\r\nconst MapView = ({ position, onClick, preferences }) => {\r\n  const { width, height } = useWindowSize();\r\n\r\n  // TODO: can remove null check once position is part of global state\r\n  if (!position) return null;\r\n\r\n  const { showVolumetricBuildings, showBasicMapFeatures } = preferences;\r\n\r\n  return (\r\n    <div style={{ width, height }}>\r\n      <Map\r\n        style=\"mapbox://styles/rektdeckard/ckayd52rb0xzg1imcbyek0g4y\"\r\n        center={position}\r\n        zoom={defaultZoom}\r\n        containerStyle={{\r\n          height: \"100%\",\r\n          width: \"100%\",\r\n        }}\r\n        onDragStart={onClick}\r\n        onDragEnd={onClick}\r\n      >\r\n        {showVolumetricBuildings && (\r\n          <Layer\r\n            id=\"3d-buildings\"\r\n            type=\"fill-extrusion\"\r\n            sourceId=\"composite\"\r\n            sourceLayer=\"building\"\r\n            filter={[\"==\", \"extrude\", \"true\"]}\r\n            minZoom={14}\r\n            paint={volumetricPainter}\r\n          />\r\n        )}\r\n        <Layer\r\n          id=\"event-markers\"\r\n          type=\"symbol\"\r\n          layout={{ \"icon-image\": \"police-15\" }}\r\n        >\r\n          {data.map((el, index) => (\r\n            <Feature key={index} coordinates={el.location} properties={el} />\r\n          ))}\r\n        </Layer>\r\n      </Map>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { preferences: state.preferences };\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(MapView);\r\n","import React, { useState } from \"react\";\r\nimport { Segment, Search, Icon, Sidebar } from \"semantic-ui-react\";\r\n\r\nconst TopSheet = ({ visible }) => {\r\n  return (\r\n    <Sidebar\r\n      as={Segment}\r\n      inverted\r\n      raised\r\n      direction=\"top\"\r\n      animation=\"overlay\"\r\n      textAlign=\"center\"\r\n      visible={visible}\r\n    >\r\n      <Search />\r\n    </Sidebar>\r\n  );\r\n};\r\n\r\nexport default TopSheet;\r\n","import React, { useState, Suspense } from \"react\";\r\nimport {\r\n  withRouter,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useLocation,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport {\r\n  Segment,\r\n  Icon,\r\n  Menu,\r\n  Sidebar,\r\n  Dimmer,\r\n  Loader,\r\n} from \"semantic-ui-react\";\r\n\r\nconst EventList = React.lazy(() => import(\"./EventList\"));\r\n\r\nconst BottomSheet = ({ visible }) => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const handleNavigate = (route) => {\r\n    history.push(route);\r\n  };\r\n\r\n  return (\r\n    <Sidebar\r\n      as={Segment}\r\n      raised\r\n      inverted\r\n      style={{ padding: 0 }}\r\n      className=\"no-overflow\"\r\n      animation=\"overlay\"\r\n      direction=\"bottom\"\r\n      visible={visible}\r\n    >\r\n      {/* <Segment raised inverted  style={{ padding: 0 }}> */}\r\n      <Menu\r\n        compact\r\n        pointing\r\n        inverted\r\n        secondary\r\n        size=\"large\"\r\n        widths={8}\r\n        icon=\"labeled\"\r\n      >\r\n        <Menu.Item\r\n          name=\"List\"\r\n          onClick={() => handleNavigate(\"/list\")}\r\n          active={location.pathname === \"/list\"}\r\n        />\r\n        <Menu.Item\r\n          name=\"Report\"\r\n          onClick={() => handleNavigate(\"/report\")}\r\n          active={location.pathname === \"/report\"}\r\n        />\r\n        <Menu.Item\r\n          name=\"SOS\"\r\n          onClick={() => handleNavigate(\"/sos\")}\r\n          active={location.pathname === \"/sos\"}\r\n        />\r\n      </Menu>\r\n      <Switch>\r\n        <Route exact path=\"/list\">\r\n          <Suspense\r\n            fallback={\r\n              <Dimmer active>\r\n                <Loader />\r\n              </Dimmer>\r\n            }\r\n          >\r\n            <EventList />\r\n          </Suspense>\r\n        </Route>\r\n        <Route exact path=\"/report\">\r\n          <Segment\r\n            inverted\r\n            style={{ minHeight: 200 }}\r\n            content={\r\n              <Dimmer active>\r\n                <Loader />\r\n              </Dimmer>\r\n            }\r\n          />\r\n        </Route>\r\n        <Route exact path=\"/sos\">\r\n          <Segment inverted>This is the \"/sos\" route</Segment>\r\n        </Route>\r\n      </Switch>\r\n      {/* </Segment> */}\r\n    </Sidebar>\r\n  );\r\n};\r\n\r\nexport default withRouter(BottomSheet);\r\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Header, Icon, Image, Menu, Segment, Sidebar } from \"semantic-ui-react\";\n\nimport \"./App.css\";\nimport MapView from \"./MapView\";\nimport TopSheet from \"./TopSheet\";\nimport BottomSheet from \"./BottomSheet\";\n\nconst App = ({ events, preferences }) => {\n  const [position, setPosition] = useState(preferences.defaultPosition);\n  const [controlsVisible, setControlsVisible] = useState(true);\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(\n      (geolocationPosition) => {\n        const {\n          coords: { longitude, latitude },\n        } = geolocationPosition;\n        setPosition([longitude, latitude]);\n      },\n      console.error,\n      { enableHighAccuracy: false, maximumAge: 15000, timeout: 30000 }\n    );\n  }, []);\n\n  const handleMapClick = (event) => {\n    console.log(event);\n    setControlsVisible((v) => !v);\n  };\n\n  return (\n    <Sidebar.Pushable className=\"no-overflow\">\n      <TopSheet visible={controlsVisible} />\n      <BottomSheet visible={controlsVisible} />\n      <Sidebar.Pusher>\n        <MapView position={position} onClick={handleMapClick} />\n      </Sidebar.Pusher>\n    </Sidebar.Pushable>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    preferences: state.preferences,\n    events: state.events,\n  };\n};\n\nexport default connect(mapStateToProps, {})(App);\n","import { FETCH_EVENTS, FETCH_EVENT_DETAILS, UPDATE_EVENT } from \"../actions\";\r\n\r\nconst INITIAL_STATE = {\r\n  dangerClose: false,\r\n  nearbyEvents: [],\r\n};\r\n\r\nexport default (state = INITIAL_STATE, { type, payload }) => {\r\n  switch (type) {\r\n    case FETCH_EVENTS:\r\n      return {\r\n        ...state,\r\n        nearbyEvents: payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst API = axios.create({\r\n  baseURL: \"\",\r\n});\r\n\r\nexport default API;\r\n","import { SET_DEFAULT_POSITION, SET_EVENT_FILTER } from \"../actions\";\r\n\r\nconst INITIAL_STATE = {\r\n  defaultPosition: JSON.parse(localStorage.getItem(SET_DEFAULT_POSITION)) ?? [\r\n    -74.0,\r\n    40.73,\r\n  ],\r\n  eventFilter: [],\r\n  showBasicMapFeatures: true,\r\n  showVolumetricBuildings: true,\r\n};\r\n\r\nexport default (state = INITIAL_STATE, { type, payload }) => {\r\n  switch (type) {\r\n    case SET_DEFAULT_POSITION:\r\n      return {\r\n        ...state,\r\n        defaultPosition: payload,\r\n      };\r\n    case SET_EVENT_FILTER:\r\n      return {\r\n        ...state,\r\n        eventFilter: payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const FETCH_EVENTS = \"fetch_events\";\r\nexport const FETCH_EVENT_DETAILS = \"fetch_event_details\";\r\nexport const UPDATE_EVENT = \"update_event\";\r\n\r\nexport const SET_EVENT_FILTER = \"update_event_filter\";\r\nexport const SET_DEFAULT_POSITION = \"update_default_position\";\r\n","import { combineReducers, createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport eventsReducer from \"./eventsReducer\";\r\nimport preferencesReducer from \"./preferencesReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  events: eventsReducer,\r\n  preferences: preferencesReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  rootReducer,\r\n  {},\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nimport App from \"./components/App\";\nimport store from \"./reducers\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}