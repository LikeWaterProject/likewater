{"version":3,"sources":["../node_modules/semantic-ui-react/dist/es/views/Item/ItemHeader.js","../node_modules/semantic-ui-react/dist/es/views/Item/ItemDescription.js","../node_modules/semantic-ui-react/dist/es/views/Item/ItemExtra.js","../node_modules/semantic-ui-react/dist/es/views/Item/ItemMeta.js","../node_modules/semantic-ui-react/dist/es/views/Item/ItemContent.js","../node_modules/semantic-ui-react/dist/es/views/Item/ItemGroup.js","../node_modules/semantic-ui-react/dist/es/views/Item/ItemImage.js","../node_modules/semantic-ui-react/dist/es/views/Item/Item.js","components/EventDetails.js"],"names":["ItemHeader","props","children","className","content","classes","cx","rest","getUnhandledProps","ElementType","getElementType","React","createElement","_extends","childrenUtils","isNil","handledProps","propTypes","create","createShorthandFactory","ItemDescription","ItemExtra","ItemMeta","ItemContent","description","extra","header","meta","verticalAlign","useVerticalAlignProp","autoGenerateKey","ItemGroup","divided","items","link","relaxed","unstackable","useKeyOnly","useKeyOrValueAndKey","itemsJSX","_map","item","childKey","itemProps","_objectWithoutProperties","finalKey","join","Item","key","ItemImage","size","Image","ui","wrapped","src","image","Content","Description","Extra","Group","Header","Meta","connect","state","map","currentPosition","useState","setLoading","event","setEvent","history","useHistory","id","useParams","useEffect","isMounted","a","API","post","eventId","crossDomain","result","mapEvents","data","console","error","load","Segment","raised","inverted","style","padding","as","border","backgroundColor","textAlign","color","onClick","push","eventType","getDistance","coordinates","lon","longitude","lat","latitude","eventDesc","Date","parseInt","reportedDt","toISOString","LoadingPanel"],"mappings":"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","file":"static/js/6.39a04664.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * An item can contain a header.\n */\n\nfunction ItemHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('header', className);\n  var rest = getUnhandledProps(ItemHeader, props);\n  var ElementType = getElementType(ItemHeader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nItemHeader.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nItemHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nItemHeader.create = createShorthandFactory(ItemHeader, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ItemHeader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * An item can contain a description with a single or multiple paragraphs.\n */\n\nfunction ItemDescription(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('description', className);\n  var rest = getUnhandledProps(ItemDescription, props);\n  var ElementType = getElementType(ItemDescription, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nItemDescription.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nItemDescription.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nItemDescription.create = createShorthandFactory(ItemDescription, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ItemDescription;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * An item can contain extra content meant to be formatted separately from the main content.\n */\n\nfunction ItemExtra(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('extra', className);\n  var rest = getUnhandledProps(ItemExtra, props);\n  var ElementType = getElementType(ItemExtra, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nItemExtra.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nItemExtra.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nItemExtra.create = createShorthandFactory(ItemExtra, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ItemExtra;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * An item can contain content metadata.\n */\n\nfunction ItemMeta(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('meta', className);\n  var rest = getUnhandledProps(ItemMeta, props);\n  var ElementType = getElementType(ItemMeta, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nItemMeta.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nItemMeta.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nItemMeta.create = createShorthandFactory(ItemMeta, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ItemMeta;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useVerticalAlignProp } from '../../lib';\nimport ItemHeader from './ItemHeader';\nimport ItemDescription from './ItemDescription';\nimport ItemExtra from './ItemExtra';\nimport ItemMeta from './ItemMeta';\n/**\n * An item can contain content.\n */\n\nfunction ItemContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      extra = props.extra,\n      header = props.header,\n      meta = props.meta,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(useVerticalAlignProp(verticalAlign), 'content', className);\n  var rest = getUnhandledProps(ItemContent, props);\n  var ElementType = getElementType(ItemContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), ItemHeader.create(header, {\n    autoGenerateKey: false\n  }), ItemMeta.create(meta, {\n    autoGenerateKey: false\n  }), ItemDescription.create(description, {\n    autoGenerateKey: false\n  }), ItemExtra.create(extra, {\n    autoGenerateKey: false\n  }), content);\n}\n\nItemContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"extra\", \"header\", \"meta\", \"verticalAlign\"];\nItemContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for ItemDescription component. */\n  description: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemExtra component. */\n  extra: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemHeader component. */\n  header: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemMeta component. */\n  meta: customPropTypes.itemShorthand,\n\n  /** Content can specify its vertical alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default ItemContent;","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _map from \"lodash/map\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly, useKeyOrValueAndKey } from '../../lib';\nimport Item from './Item';\n/**\n * A group of items.\n */\n\nfunction ItemGroup(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      divided = props.divided,\n      items = props.items,\n      link = props.link,\n      relaxed = props.relaxed,\n      unstackable = props.unstackable;\n  var classes = cx('ui', useKeyOnly(divided, 'divided'), useKeyOnly(link, 'link'), useKeyOnly(unstackable, 'unstackable'), useKeyOrValueAndKey(relaxed, 'relaxed'), 'items', className);\n  var rest = getUnhandledProps(ItemGroup, props);\n  var ElementType = getElementType(ItemGroup, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  var itemsJSX = _map(items, function (item) {\n    var childKey = item.childKey,\n        itemProps = _objectWithoutProperties(item, [\"childKey\"]);\n\n    var finalKey = childKey || [itemProps.content, itemProps.description, itemProps.header, itemProps.meta].join('-');\n    return React.createElement(Item, _extends({}, itemProps, {\n      key: finalKey\n    }));\n  });\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), itemsJSX);\n}\n\nItemGroup.handledProps = [\"as\", \"children\", \"className\", \"content\", \"divided\", \"items\", \"link\", \"relaxed\", \"unstackable\"];\nItemGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Items can be divided to better distinguish between grouped content. */\n  divided: PropTypes.bool,\n\n  /** Shorthand array of props for Item. */\n  items: customPropTypes.collectionShorthand,\n\n  /** An item can be formatted so that the entire contents link to another page. */\n  link: PropTypes.bool,\n\n  /** A group of items can relax its padding to provide more negative space. */\n  relaxed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** Prevent items from stacking on mobile. */\n  unstackable: PropTypes.bool\n} : {};\nexport default ItemGroup;","import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport { createShorthandFactory, getUnhandledProps } from '../../lib';\nimport Image from '../../elements/Image';\n/**\n * An item can contain an image.\n */\n\nfunction ItemImage(props) {\n  var size = props.size;\n  var rest = getUnhandledProps(ItemImage, props);\n  return React.createElement(Image, _extends({}, rest, {\n    size: size,\n    ui: !!size,\n    wrapped: true\n  }));\n}\n\nItemImage.handledProps = [\"size\"];\nItemImage.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An image may appear at different sizes. */\n  size: Image.propTypes.size\n} : {};\nItemImage.create = createShorthandFactory(ItemImage, function (src) {\n  return {\n    src: src\n  };\n});\nexport default ItemImage;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport ItemContent from './ItemContent';\nimport ItemDescription from './ItemDescription';\nimport ItemExtra from './ItemExtra';\nimport ItemGroup from './ItemGroup';\nimport ItemHeader from './ItemHeader';\nimport ItemImage from './ItemImage';\nimport ItemMeta from './ItemMeta';\n/**\n * An item view presents large collections of site content for display.\n */\n\nfunction Item(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      extra = props.extra,\n      header = props.header,\n      image = props.image,\n      meta = props.meta;\n  var classes = cx('item', className);\n  var rest = getUnhandledProps(Item, props);\n  var ElementType = getElementType(Item, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), ItemImage.create(image, {\n    autoGenerateKey: false\n  }), React.createElement(ItemContent, {\n    content: content,\n    description: description,\n    extra: extra,\n    header: header,\n    meta: meta\n  }));\n}\n\nItem.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"extra\", \"header\", \"image\", \"meta\"];\nItem.Content = ItemContent;\nItem.Description = ItemDescription;\nItem.Extra = ItemExtra;\nItem.Group = ItemGroup;\nItem.Header = ItemHeader;\nItem.Image = ItemImage;\nItem.Meta = ItemMeta;\nItem.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for ItemContent component. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for ItemDescription component. */\n  description: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemExtra component. */\n  extra: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemHeader component. */\n  header: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemImage component. */\n  image: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemMeta component. */\n  meta: customPropTypes.itemShorthand\n} : {};\nexport default Item;","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { getDistance } from \"geolib\";\r\nimport { Segment, Header, Item, Button } from \"semantic-ui-react\";\r\n\r\nimport API from \"../api\";\r\nimport { mapEvents } from \"../hooks\";\r\nimport LoadingPanel from \"./LoadingPanel\";\r\n\r\nconst EventDetails = ({ map }) => {\r\n  const { currentPosition } = map;\r\n  const [loading, setLoading] = useState(false);\r\n  const [event, setEvent] = useState();\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    const load = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const result = await API.post(\r\n          \"/vieweventdetails\",\r\n          { eventId: id },\r\n          { crossDomain: true }\r\n        );\r\n        isMounted && setEvent(mapEvents([result.data])[0]);\r\n      } catch (e) {\r\n        console.error(e);\r\n      } finally {\r\n        isMounted && setLoading(false);\r\n      }\r\n    };\r\n\r\n    load();\r\n    return () => (isMounted = false);\r\n  }, [id]);\r\n\r\n  const handleBackPressed = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <Segment className=\"clickable\" raised inverted style={{ padding: 16 }}>\r\n      {event ? (\r\n        <Item>\r\n          <Item.Header as=\"h3\" className=\"panel-header\">\r\n            <button\r\n              style={{\r\n                border: \"none\",\r\n                backgroundColor: \"transparent\",\r\n                textAlign: \"center\",\r\n                color: \"white\",\r\n              }}\r\n              onClick={handleBackPressed}\r\n            >\r\n              <i className=\"ri-arrow-left-line panel-icon\" />\r\n            </button>\r\n            {/* <Button basic inverted secondary circular className=\"ri-arrow-left-line\" /> */}\r\n            {event?.eventType}\r\n          </Item.Header>\r\n          {/* <Item.Image>\r\n              <i\r\n                className={`ri-${event?.icon}-fill ri-xl`}\r\n                style={{ color: event?.color }}\r\n              />\r\n            </Item.Image> */}\r\n          <Item.Content>\r\n            <Item.Description>\r\n              {currentPosition &&\r\n                event &&\r\n                `${getDistance(event?.coordinates, {\r\n                  lon: currentPosition.longitude,\r\n                  lat: currentPosition.latitude,\r\n                })}m`}\r\n            </Item.Description>\r\n            <Item.Meta>{event?.eventDesc}</Item.Meta>\r\n            <Item.Extra>\r\n              {new Date(parseInt(event?.reportedDt)).toISOString()}\r\n            </Item.Extra>\r\n          </Item.Content>\r\n        </Item>\r\n      ) : (\r\n        <LoadingPanel />\r\n      )}\r\n    </Segment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { map: state.map };\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(EventDetails);\r\n"],"sourceRoot":""}