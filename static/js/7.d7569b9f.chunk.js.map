{"version":3,"sources":["components/EventSubmit.js"],"names":["options","key","EventType","value","text","icon","className","style","color","connect","state","markerPosition","map","userToken","user","reportEvent","lon","lat","useState","type","setType","description","setDescription","history","useHistory","handleSubmit","a","coordinates","eventType","eventDesc","push","raised","inverted","padding","as","Subheader","floated","toFixed","Group","inline","circular","option","active","size","Button","onClick","Input","label","placeholder","onChange","event","content"],"mappings":"gPAgBMA,EAAU,CACd,CACEC,IAAKC,IACLC,MAAOD,IACPE,KAAM,MACNC,KACE,uBACEC,UAAU,kCACVC,MAAO,CAAEC,MAAO,gBAItB,CACEP,IAAKC,IACLC,MAAOD,IACPE,KAAM,OACNC,KAAM,uBAAGC,UAAU,kCAErB,CACEL,IAAKC,IACLC,MAAOD,IACPE,KAAM,SACNC,KAAM,uBAAGC,UAAU,wCAErB,CACEL,IAAKC,IACLC,MAAOD,IACPE,KAAM,SACNC,KAAM,uBAAGC,UAAU,+BAErB,CACEL,IAAKC,IACLC,MAAOD,IACPE,KAAM,MACNC,KAAM,uBAAGC,UAAU,iCA2ERG,uBAPS,SAACC,GACvB,MAAO,CACLC,eAAgBD,EAAME,IAAID,eAC1BE,UAAWH,EAAMI,KAAKD,aAIc,CAAEE,iBAA3BN,EAvEK,SAAC,GAAgD,IAA9CE,EAA6C,EAA7CA,eAAgBE,EAA6B,EAA7BA,UAAWE,EAAkB,EAAlBA,YAAkB,SAC/CJ,QAD+C,IAC/CA,IAAkB,CAAC,EAAG,GADyB,mBAC3DK,EAD2D,KACtDC,EADsD,OAE1CC,qBAF0C,mBAE3DC,EAF2D,KAErDC,EAFqD,OAG5BF,mBAAS,IAHmB,mBAG3DG,EAH2D,KAG9CC,EAH8C,KAI5DC,EAAUC,cAEVC,EAAY,uCAAG,sBAAAC,EAAA,2DACfP,GAAQH,GAAOC,GAAOI,GADP,gCAEXN,EAAY,CAChBY,YAAa,CAAEX,MAAKC,OACpBW,UAAWT,EACXU,UAAWR,EACXR,cANe,OAQjBU,EAAQO,KAAK,KARI,2CAAH,qDAYlB,OACE,kBAAC,IAAD,CAASxB,UAAU,YAAYyB,QAAM,EAACC,UAAQ,EAACzB,MAAO,CAAE0B,QAAS,KAC/D,kBAAC,IAAD,CAAQD,UAAQ,EAACE,GAAG,MAApB,eAEE,kBAAC,IAAOC,UAAR,CAAkBC,QAAQ,SAA1B,WAAuCnB,EAAIoB,QAAQ,GAAnD,aAA0DrB,EAAIqB,QAC5D,GADF,OAIF,kBAAC,IAAD,CAAML,UAAQ,GACZ,kBAAC,IAAKM,MAAN,CAAYC,QAAM,GAChB,uCACA,kBAAC,IAAMD,MAAP,CAAaE,UAAQ,GAClBxC,EAAQY,KAAI,SAAC6B,GAAD,OACX,kBAAC,IAAD,CACEC,OAAQvB,IAASsB,EAAOtC,MACxB6B,SAAUb,IAASsB,EAAOtC,MAE1BwC,KAAK,QACLT,GAAIU,IACJ3C,IAAKwC,EAAOxC,IACZ4C,QAAS,kBAAMzB,EAAQqB,EAAOtC,SAE7BsC,EAAOpC,KACPoC,EAAOrC,WAKhB,kBAAC,IAAK0C,MAAN,CACEC,MAAM,cACNC,YAAY,6BACZ7C,MAAOkB,EACP4B,SAAU,SAACC,EAAD,OAAU/C,EAAV,EAAUA,MAAV,OAAsBmB,EAAenB,MAEjD,kBAAC,IAAD,CACEwC,KAAK,QACLX,UAAQ,EACRQ,UAAQ,EACRW,QAAQ,SACRN,QAASpB","file":"static/js/7.d7569b9f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Segment,\r\n  Header,\r\n  Icon,\r\n  Form,\r\n  Divider,\r\n  Button,\r\n  Label,\r\n} from \"semantic-ui-react\";\r\n\r\nimport { reportEvent } from \"../actions\";\r\nimport * as EventType from \"../events/types\";\r\n\r\nconst options = [\r\n  {\r\n    key: EventType.AID,\r\n    value: EventType.AID,\r\n    text: \"Aid\",\r\n    icon: (\r\n      <i\r\n        className=\"ri-first-aid-kit-fill ri-lg aid\"\r\n        style={{ color: \"gainsboro\" }}\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    key: EventType.INFO,\r\n    value: EventType.INFO,\r\n    text: \"Info\",\r\n    icon: <i className=\"ri-broadcast-fill ri-lg info\" />,\r\n  },\r\n  {\r\n    key: EventType.POLICE,\r\n    value: EventType.POLICE,\r\n    text: \"Police\",\r\n    icon: <i className=\"ri-alarm-warning-fill ri-lg police\" />,\r\n  },\r\n  {\r\n    key: EventType.SAFETY,\r\n    value: EventType.SAFETY,\r\n    text: \"Safety\",\r\n    icon: <i className=\"ri-fire-fill ri-lg safety\" />,\r\n  },\r\n  {\r\n    key: EventType.EMERGENCY,\r\n    value: EventType.EMERGENCY,\r\n    text: \"SOS\",\r\n    icon: <i className=\"ri-lifebuoy-fill ri-lg sos\" />,\r\n  },\r\n];\r\n\r\nconst EventSubmit = ({ markerPosition, userToken, reportEvent }) => {\r\n  const [lon, lat] = markerPosition ?? [0, 0];\r\n  const [type, setType] = useState();\r\n  const [description, setDescription] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = async () => {\r\n    if (type && lon && lat && description) {\r\n      await reportEvent({\r\n        coordinates: { lon, lat },\r\n        eventType: type,\r\n        eventDesc: description,\r\n        userToken,\r\n      });\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Segment className=\"clickable\" raised inverted style={{ padding: 16 }}>\r\n      <Header inverted as=\"h3\">\r\n        Submit event\r\n        <Header.Subheader floated=\"right\">{`[${lat.toFixed(4)}, ${lon.toFixed(\r\n          4\r\n        )}]`}</Header.Subheader>\r\n      </Header>\r\n      <Form inverted>\r\n        <Form.Group inline>\r\n          <label>Type</label>\r\n          <Label.Group circular>\r\n            {options.map((option) => (\r\n              <Label\r\n                active={type === option.value}\r\n                inverted={type !== option.value}\r\n                // basic\r\n                size=\"large\"\r\n                as={Button}\r\n                key={option.key}\r\n                onClick={() => setType(option.value)}\r\n              >\r\n                {option.icon}\r\n                {option.text}\r\n              </Label>\r\n            ))}\r\n          </Label.Group>\r\n        </Form.Group>\r\n        <Form.Input\r\n          label=\"Description\"\r\n          placeholder=\"E.g. Barricade on Main St.\"\r\n          value={description}\r\n          onChange={(event, { value }) => setDescription(value)}\r\n        />\r\n        <Button\r\n          size=\"small\"\r\n          inverted\r\n          circular\r\n          content=\"Submit\"\r\n          onClick={handleSubmit}\r\n        />\r\n      </Form>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    markerPosition: state.map.markerPosition,\r\n    userToken: state.user.userToken,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { reportEvent })(EventSubmit);\r\n"],"sourceRoot":""}