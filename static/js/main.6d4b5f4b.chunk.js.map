{"version":3,"sources":["components/LoadingPanel.js","hooks/useLongPress.js","hooks/useEvents.js","events/types.js","actions/types.js","actions/eventActions.js","actions/mapActions.js","actions/userActions.js","assets/first-aid-kit-fill.svg","assets/broadcast-fill.svg","assets/alarm-warning-fill.svg","assets/fire-fill.svg","assets/lifebuoy-fill.svg","assets/pushpin-2-fill.svg","assets/focus-3-line.svg","components/Geolocator.js","components/MapControls.js","components/MapEventLayer.js","components/MapIcons.js","components/MapView.js","components/TopSheet.js","components/BottomSheet.js","components/App.js","reducers/eventsReducer.js","reducers/mapReducer.js","reducers/userReducer.js","reducers/index.js","serviceWorker.js","index.js","api/index.js"],"names":["LoadingPanel","raised","inverted","style","padding","height","display","alignItems","active","inline","preventDefault","event","isTouchEvent","touches","length","useLongPress","callback","isPreventDefault","delay","timeout","useRef","target","start","useCallback","map","originalEvent","addEventListener","passive","current","setTimeout","clear","clearTimeout","removeEventListener","onTouchStart","onTouchEnd","getEventIcon","eventType","EventType","icon","color","mapEvents","modelEvents","eventId","eventDesc","coordinates","reportedDt","useEvents","useMemo","AID","INFO","POLICE","SAFETY","EMERGENCY","PIN","POSITION","FETCH_EVENTS","FETCH_EVENT_DETAILS","SET_EVENT_FILTER","SET_DEFAULT_POSITION","SET_CURRENT_POSITION","SET_MARKER_POSITION","SET_USE_GEOLOCATION","INITIALIZE_USER","INVALIDATE_USER","getEvents","radius","userToken","dispatch","a","API","post","result","type","payload","data","reportEvent","console","log","setMarkerPosition","setCurrentPosition","position","setUseGeolocation","preferred","localStorage","setItem","JSON","stringify","navigator","permissions","query","name","state","initializeGeolocation","getState","parse","getItem","then","permissionStatus","permitted","onchange","shouldUseGeolocation","initializeUser","validUntil","Date","now","uuidv4","addDays","getTime","module","exports","connect","location","useGeolocation","enableHighAccuracy","maximumAge","useEffect","isMounted","loading","longitude","context","Button","top","right","onClick","rotateTo","Group","vertical","zoomIn","zoomOut","MapEventLayer","events","visibility","onMouseEvents","id","layout","paint","evt","lon","lat","key","properties","aidIcon","Image","src","aidAsset","infoIcon","infoAsset","policeIcon","policeAsset","safetyIcon","safetyAsset","sosAsset","pinIcon","pinAsset","positionIcon","positionAsset","MapIcons","Mapbox","ReactMapboxGl","accessToken","attributionControl","MAP_DEFAULTS","defaultZoom","volumetricPainter","property","onMoveEnd","toggleControls","history","useHistory","useWindowSize","width","currentPosition","defaultPosition","markerPosition","showVolumetricBuildings","nearbyEvents","showBasicMapFeatures","eventFilters","onItemHover","cursor","getCanvas","handleItemClick","feature","flyTo","center","zoom","push","onMouseEnter","onMouseLeave","handleAddMarker","mapEvent","isMoving","isRotating","isZooming","lngLat","lng","onLongPressEvent","containerStyle","latitude","onStyleLoad","on","defaultPrevented","onContextMenu","Consumer","sourceId","sourceLayer","filter","minZoom","aid","info","police","safety","sos","TopSheet","visible","useState","setQuery","Sidebar","as","Segment","direction","animation","textAlign","Menu","borderless","widths","Item","fitted","Search","disabled","value","onSearchChange","onFocus","onBlur","open","circular","size","floated","Loader","EventList","React","lazy","EventDetails","EventSubmit","withRouter","className","boxShadow","compact","window","confirm","path","fallback","exact","controlsVisible","setControlsVisible","handleToggleControls","v","Pushable","Pusher","getCenter","getBounds","_sw","_ne","meters","getDistance","INITIAL_STATE","dangerClose","rootReducer","combineReducers","user","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Boolean","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","catch","error","message","axios","create","baseURL"],"mappings":"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","file":"static/js/main.6d4b5f4b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Segment, Loader } from \"semantic-ui-react\";\r\n\r\nconst LoadingPanel = () => (\r\n  <Segment raised inverted style={{ padding: 8, height: 292}}>\r\n    <div style={{ height: \"100%\", display: \"flex\", alignItems: \"center\" }}>\r\n      <Loader active inline=\"centered\" />\r\n    </div>\r\n  </Segment>\r\n);\r\n\r\nexport default LoadingPanel;\r\n","/* eslint-disable */\r\nimport { useCallback, useRef } from \"react\";\r\n\r\nconst isTouchEvent = (event) => {\r\n  return !!event[\"touches\"];\r\n};\r\n\r\nconst preventDefault = (event) => {\r\n  if (!isTouchEvent(event)) return;\r\n  if (event.touches.length > 1 && event.preventDefault) {\r\n    event.preventDefault && event.preventDefault();\r\n  }\r\n};\r\n\r\nexport const useLongPress = (\r\n  callback,\r\n  { isPreventDefault = true, delay = 500 } = {}\r\n) => {\r\n  const timeout = useRef();\r\n  const target = useRef();\r\n\r\n  const start = useCallback(\r\n    (map, event) => {\r\n      const { originalEvent } = event;\r\n      // prevent ghost click on mobile devices\r\n      if (isPreventDefault && originalEvent.target) {\r\n        originalEvent.target.addEventListener(\"touchend\", preventDefault, {\r\n          passive: false,\r\n        });\r\n        target.current = originalEvent.target;\r\n      }\r\n      if (originalEvent.touches.length < 2) {\r\n        timeout.current = setTimeout(() => {\r\n          callback(map, event);\r\n        }, delay);\r\n      }\r\n    },\r\n    [callback, delay]\r\n  );\r\n\r\n  const clear = useCallback((map, event) => {\r\n    // clearTimeout and removeEventListener\r\n    timeout.current && clearTimeout(timeout.current);\r\n    if (isPreventDefault && target.current) {\r\n      target.current.removeEventListener(\"touchend\", preventDefault);\r\n    }\r\n  }, []);\r\n\r\n  return {\r\n    // onMouseDown: start,\r\n    onTouchStart: start,\r\n    // onMouseUp: clear,\r\n    // onMouseLeave: clear,\r\n    onTouchEnd: clear,\r\n  };\r\n};\r\n","import { useMemo } from \"react\";\r\nimport * as EventType from \"../events/types\";\r\n\r\nconst getEventIcon = (eventType) => {\r\n  switch (eventType) {\r\n    case EventType.AID:\r\n      return { icon: \"first-aid-kit\", color: \"gainsboro\" };\r\n    case EventType.EMERGENCY:\r\n      return { icon: \"lifebuoy\", color: \"crimson\" };\r\n    case EventType.INFO:\r\n      return { icon: \"broadcast\", color: \"mediumseagreen\" };\r\n    case EventType.POLICE:\r\n      return { icon: \"alarm-warning\", color: \"royalblue\" };\r\n    case EventType.SAFETY:\r\n      return { icon: \"fire\", color: \"darkorange\" };\r\n    default:\r\n      return { icon: \"pushpin-2\", color: \"mediumpurple\" };\r\n  }\r\n};\r\n\r\n// const getEventIcon = (eventType) => {\r\n//   switch (eventType) {\r\n//     case AID:\r\n//       return { icon: \"first-aid-kit-fill\", color: \"gainsboro\" };\r\n//     case EMERGENCY:\r\n//       return { icon: \"emergency\", color: \"crimson\" };\r\n//     case INFO:\r\n//       return { icon: \"bullhorn\", color: \"mediumseagreen\" };\r\n//     case POLICE:\r\n//       return { icon: \"alarm-warning\", color: \"royalblue\" };\r\n//     case SAFETY:\r\n//       return { icon: \"fire\", color: \"darkorange\" };\r\n//     default:\r\n//       return { icon: \"map pin\", color: \"mediumpurple\" };\r\n//   }\r\n// };\r\n\r\nexport const mapEvents = (modelEvents = []) =>\r\n  modelEvents.map((event) => {\r\n    const { eventId, eventType, eventDesc, coordinates, reportedDt } = event;\r\n    return {\r\n      eventId,\r\n      eventType,\r\n      coordinates,\r\n      eventDesc,\r\n      reportedDt,\r\n      ...getEventIcon(eventType),\r\n    };\r\n  });\r\n\r\nexport const useEvents = (modelEvents) =>\r\n  useMemo(() => mapEvents(modelEvents), [modelEvents]);\r\n","export const AID = \"AID\";\r\nexport const INFO = \"INFO\";\r\nexport const POLICE = \"Police Brutality\";\r\nexport const SAFETY = \"SAFETY\";\r\nexport const EMERGENCY = \"SOS\";\r\nexport const PIN = \"PIN\";\r\nexport const POSITION = \"POSITION\";","export const FETCH_EVENTS = \"fetch_events\";\r\nexport const FETCH_EVENT_DETAILS = \"fetch_event_details\";\r\nexport const UPDATE_EVENT = \"update_event\";\r\nexport const SET_EVENT_FILTER = \"update_event_filter\";\r\n\r\nexport const SET_DEFAULT_POSITION = \"update_default_position\";\r\nexport const SET_CURRENT_POSITION = \"set_current_position\";\r\nexport const SET_MARKER_POSITION = \"set_marker_position\";\r\nexport const SET_USE_GEOLOCATION = \"set_use_geolocation\";\r\n\r\nexport const INITIALIZE_USER = \"initialize_user\";\r\nexport const INVALIDATE_USER = \"invalidate_user\";\r\n","import { FETCH_EVENTS, FETCH_EVENT_DETAILS, SET_EVENT_FILTER } from \".\";\r\nimport API from \"../api\";\r\n\r\nexport const getEvents = ({\r\n  coordinates,\r\n  radius = 75000,\r\n  userToken = \"UNASSIGNED\",\r\n}) => async (dispatch) => {\r\n  const result = await API.post(\"/getevents\", {\r\n    coordinates,\r\n    radius,\r\n    userToken,\r\n  });\r\n  dispatch({\r\n    type: FETCH_EVENTS,\r\n    payload: result.data,\r\n  });\r\n};\r\n\r\nexport const getEventDetails = (eventId) => async (dispatch) => {\r\n  const result = await API.post(\"/vieweventdetails\", eventId);\r\n  dispatch({\r\n    type: FETCH_EVENT_DETAILS,\r\n    payload: result.data,\r\n  });\r\n};\r\n\r\nexport const reportEvent = ({\r\n  coordinates,\r\n  eventType,\r\n  eventDesc,\r\n  userToken = \"UNASSIGNED\",\r\n}) => async (dispatch) => {\r\n  const result = await API.post(\"/reportevent\", {\r\n    coordinates,\r\n    eventType,\r\n    eventDesc,\r\n    userToken,\r\n  });\r\n  console.log(result);\r\n  dispatch(getEvents({ coordinates, userToken }));\r\n};\r\n\r\nexport const setEventFilter = (filters = {}) => {\r\n  return {\r\n    type: SET_EVENT_FILTER,\r\n    payload: filters,\r\n  };\r\n};\r\n","import {\r\n  SET_CURRENT_POSITION,\r\n  SET_USE_GEOLOCATION,\r\n  SET_DEFAULT_POSITION,\r\n  SET_MARKER_POSITION,\r\n} from \"./types\";\r\n\r\nexport const setMarkerPosition = (coordinates) => {\r\n  return {\r\n    type: SET_MARKER_POSITION,\r\n    payload: coordinates,\r\n  };\r\n};\r\n\r\nexport const setDefaultPosition = (coordinates) => {\r\n  localStorage.setItem(SET_DEFAULT_POSITION, JSON.stringify(coordinates));\r\n  return {\r\n    type: SET_DEFAULT_POSITION,\r\n    payload: coordinates,\r\n  };\r\n};\r\n\r\nexport const setCurrentPosition = (position) => {\r\n  return {\r\n    type: SET_CURRENT_POSITION,\r\n    payload: position,\r\n  };\r\n};\r\n\r\nexport const setUseGeolocation = (preferred) => async (dispatch) => {\r\n  localStorage.setItem(SET_USE_GEOLOCATION, JSON.stringify(preferred));\r\n  const { state: permitted } = await navigator.permissions.query({\r\n    name: \"geolocation\",\r\n  });\r\n\r\n  dispatch({\r\n    type: SET_USE_GEOLOCATION,\r\n    payload: preferred,\r\n  });\r\n\r\n  if (!preferred) dispatch(setCurrentPosition(null));\r\n};\r\n\r\nexport const initializeGeolocation = () => async (dispatch, getState) => {\r\n  const preferred =\r\n    JSON.parse(localStorage.getItem(SET_USE_GEOLOCATION)) ?? false;\r\n\r\n  let permitted;\r\n  navigator.permissions\r\n    .query({ name: \"geolocation\" })\r\n    .then((permissionStatus) => {\r\n      permitted = permissionStatus.state;\r\n      permissionStatus.onchange = ({ target: { state: permitted } }) => {\r\n        dispatch({\r\n          type: SET_USE_GEOLOCATION,\r\n          payload:\r\n            getState().map.shouldUseGeolocation && permitted === \"granted\",\r\n        });\r\n      };\r\n    });\r\n\r\n  dispatch({\r\n    type: SET_USE_GEOLOCATION,\r\n    payload: preferred && permitted === \"granted\",\r\n  });\r\n};\r\n","import { INITIALIZE_USER, INVALIDATE_USER } from \"./types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { addDays } from \"date-fns\";\r\n\r\nexport const initializeUser = () => {\r\n  let { userToken, validUntil } =\r\n    JSON.parse(localStorage.getItem(INITIALIZE_USER)) ?? {};\r\n  if (!userToken || !validUntil || Date.now() > validUntil) {\r\n    userToken = uuidv4();\r\n    validUntil = addDays(Date.now(), 1).getTime();\r\n    localStorage.setItem(\r\n      INITIALIZE_USER,\r\n      JSON.stringify({ userToken, validUntil })\r\n    );\r\n  }\r\n  console.log(userToken, validUntil);\r\n  return { type: INITIALIZE_USER, payload: { userToken, validUntil } };\r\n};\r\n\r\nexport const invalidateUser = () => {\r\n  localStorage.removeItem(INITIALIZE_USER);\r\n  return { type: INVALIDATE_USER };\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/first-aid-kit-fill.f96d703e.svg\";","module.exports = __webpack_public_path__ + \"static/media/broadcast-fill.d068d7ab.svg\";","module.exports = __webpack_public_path__ + \"static/media/alarm-warning-fill.129f3113.svg\";","module.exports = __webpack_public_path__ + \"static/media/fire-fill.feb2802d.svg\";","module.exports = __webpack_public_path__ + \"static/media/lifebuoy-fill.da569f96.svg\";","module.exports = __webpack_public_path__ + \"static/media/pushpin-2-fill.466aaf39.svg\";","module.exports = __webpack_public_path__ + \"static/media/focus-3-line.ec68912f.svg\";","import { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useGeolocation } from \"react-use\";\r\n\r\nimport { setCurrentPosition } from \"../actions\";\r\n\r\nconst Geolocator = ({ setCurrentPosition }) => {\r\n  const location = useGeolocation({\r\n    enableHighAccuracy: true,\r\n    maximumAge: 30000,\r\n    timeout: 30000,\r\n  });\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    if (!location.loading && location.longitude) {\r\n      isMounted && setCurrentPosition(location);\r\n    }\r\n\r\n    return () => (isMounted = false);\r\n  }, [location, setCurrentPosition]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default connect(null, { setCurrentPosition })(Geolocator);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nimport { setUseGeolocation } from \"../actions\";\r\n\r\nconst MapControls = ({ context, shouldUseGeolocation, setUseGeolocation }) => {\r\n  const handleZoomIn = () => {\r\n    context.zoomIn();\r\n  };\r\n\r\n  const handleZoomOut = () => {\r\n    context.zoomOut();\r\n  };\r\n\r\n  const handleReorient = () => {\r\n    context.rotateTo(0);\r\n  };\r\n\r\n  const handleShouldUseGeolocation = () => {\r\n    setUseGeolocation(!shouldUseGeolocation);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        icon=\"location arrow\"\r\n        color=\"black\"\r\n        style={{ position: \"absolute\", top: 98, right: 3 }}\r\n        onClick={handleReorient}\r\n      />\r\n      <Button.Group\r\n        vertical\r\n        style={{ position: \"absolute\", top: 142, right: 6 }}\r\n      >\r\n        <Button color=\"black\" icon=\"plus\" onClick={handleZoomIn} />\r\n        <Button color=\"black\" icon=\"minus\" onClick={handleZoomOut} />\r\n      </Button.Group>\r\n      <Button\r\n        color={shouldUseGeolocation ? \"blue\" : \"black\"}\r\n        icon=\"crosshairs\"\r\n        style={{ position: \"absolute\", top: 222, right: 3 }}\r\n        onClick={handleShouldUseGeolocation}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { shouldUseGeolocation: state.map.shouldUseGeolocation };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setUseGeolocation })(MapControls);\r\n","import React from \"react\";\r\nimport { Layer, Feature } from \"react-mapbox-gl\";\r\n\r\nimport * as EventType from \"../events/types\";\r\n\r\nconst MapEventLayer = ({\r\n  type = EventType.INFO,\r\n  events = [],\r\n  visibility = true,\r\n  onMouseEvents,\r\n}) => {\r\n  return (\r\n    <Layer\r\n      id={type}\r\n      type=\"symbol\"\r\n      layout={{\r\n        visibility: visibility ? \"visible\" : \"none\",\r\n        \"icon-image\": type,\r\n        \"icon-allow-overlap\": false,\r\n        // \"icon-ignore-placement\": true,\r\n      }}\r\n      paint={{\r\n        \"icon-color\": \"red\",\r\n        \"icon-halo-blur\": 1,\r\n        \"icon-halo-width\": 40,\r\n        \"icon-halo-color\": \"#ff0000\",\r\n      }}\r\n    >\r\n      {events.map((evt) => {\r\n        const {\r\n          eventId,\r\n          coordinates: { lon, lat },\r\n        } = evt;\r\n        return (\r\n          <Feature\r\n            key={eventId}\r\n            coordinates={[lon, lat]}\r\n            properties={evt}\r\n            {...onMouseEvents}\r\n          />\r\n        );\r\n      })}\r\n    </Layer>\r\n  );\r\n};\r\n\r\nexport default MapEventLayer;\r\n","import React from \"react\";\r\nimport { Image as Pin } from \"react-mapbox-gl\";\r\n\r\nimport * as EventType from \"../events/types\";\r\n\r\nimport aidAsset from \"../assets/first-aid-kit-fill.svg\";\r\nimport infoAsset from \"../assets/broadcast-fill.svg\";\r\nimport policeAsset from \"../assets/alarm-warning-fill.svg\";\r\nimport safetyAsset from \"../assets/fire-fill.svg\";\r\nimport sosAsset from \"../assets/lifebuoy-fill.svg\";\r\nimport pinAsset from \"../assets/pushpin-2-fill.svg\";\r\nimport positionAsset from \"../assets/focus-3-line.svg\";\r\n\r\nconst aidIcon = new Image(24, 24);\r\naidIcon.src = aidAsset;\r\nconst infoIcon = new Image(24, 24);\r\ninfoIcon.src = infoAsset;\r\nconst policeIcon = new Image(24, 24);\r\npoliceIcon.src = policeAsset;\r\nconst safetyIcon = new Image(24, 24);\r\nsafetyIcon.src = safetyAsset;\r\nconst sosIcon = new Image(24, 24);\r\nsosIcon.src = sosAsset;\r\nconst pinIcon = new Image(24, 24);\r\npinIcon.src = pinAsset;\r\nconst positionIcon = new Image(24, 24);\r\npositionIcon.src = positionAsset;\r\n\r\nconst MapIcons = () => (\r\n  <>\r\n    <Pin id={EventType.AID} data={aidIcon} />\r\n    <Pin id={EventType.INFO} data={infoIcon} />\r\n    <Pin id={EventType.POLICE} data={policeIcon} />\r\n    <Pin id={EventType.SAFETY} data={safetyIcon} />\r\n    <Pin id={EventType.EMERGENCY} data={safetyIcon} />\r\n    <Pin id={EventType.PIN} data={pinIcon} />\r\n    <Pin id={EventType.POSITION} data={positionIcon} />\r\n  </>\r\n);\r\n\r\nexport default MapIcons;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useWindowSize } from \"react-use\";\r\nimport ReactMapboxGl, { MapContext, Layer, Feature } from \"react-mapbox-gl\";\r\n\r\nimport * as EventType from \"../events/types\";\r\nimport { useLongPress } from \"../hooks\";\r\nimport { setMarkerPosition } from \"../actions\";\r\nimport MapControls from \"./MapControls\";\r\nimport MapEventLayer from \"./MapEventLayer\";\r\nimport MapIcons from \"./MapIcons\";\r\n\r\nconst Mapbox = ReactMapboxGl({\r\n  accessToken:\r\n    \"pk.eyJ1IjoicmVrdGRlY2thcmQiLCJhIjoiY2theWJ4OXM0MGhiejJ3cnkzcmk0andiYyJ9.IinlG0vyUvcWhvlAREJXeA\",\r\n  attributionControl: false,\r\n});\r\n\r\nconst MAP_DEFAULTS = {\r\n  defaultZoom: [10],\r\n  volumetricPainter: {\r\n    \"fill-extrusion-color\": \"#424d5c\",\r\n    \"fill-extrusion-height\": {\r\n      type: \"identity\",\r\n      property: \"height\",\r\n    },\r\n    \"fill-extrusion-base\": {\r\n      type: \"identity\",\r\n      property: \"min_height\",\r\n    },\r\n    \"fill-extrusion-opacity\": 0.6,\r\n  },\r\n};\r\n\r\nconst MapView = ({\r\n  map,\r\n  events,\r\n  onMoveEnd,\r\n  toggleControls,\r\n  setMarkerPosition,\r\n}) => {\r\n  const history = useHistory();\r\n  const { width, height } = useWindowSize();\r\n  const {\r\n    currentPosition,\r\n    defaultPosition,\r\n    markerPosition,\r\n    showVolumetricBuildings,\r\n    showBasicMapFeatures,\r\n  } = map;\r\n  const { nearbyEvents, eventFilters } = events;\r\n\r\n  const initializeMap = (map) => {\r\n    map.on(\"click\", ({ originalEvent }) => {\r\n      if (!originalEvent.defaultPrevented) {\r\n        setMarkerPosition(null);\r\n        history.push(\"/\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const onItemHover = ({ map }, cursor) => {\r\n    map.getCanvas().style.cursor = cursor;\r\n  };\r\n\r\n  const handleItemClick = useCallback(\r\n    ({\r\n      map,\r\n      feature: {\r\n        properties: { eventId, coordinates },\r\n      },\r\n      originalEvent,\r\n    }) => {\r\n      originalEvent.preventDefault();\r\n      const { lon, lat } = JSON.parse(coordinates);\r\n      map.flyTo({ center: [lon, lat], zoom: 16 });\r\n      toggleControls(true);\r\n      history.push(`/events/${eventId}`);\r\n    },\r\n    [history, toggleControls]\r\n  );\r\n\r\n  const onMouseEvents = useMemo(\r\n    () => ({\r\n      onMouseEnter: (event) => onItemHover(event, \"pointer\"),\r\n      onMouseLeave: (event) => onItemHover(event, \"\"),\r\n      onClick: handleItemClick,\r\n    }),\r\n    [handleItemClick]\r\n  );\r\n\r\n  const handleAddMarker = (map, mapEvent) => {\r\n    if (map.isMoving() || map.isRotating() || map.isZooming()) return;\r\n    const { lat, lng } = mapEvent.lngLat;\r\n    toggleControls(true);\r\n    setMarkerPosition([lng, lat]);\r\n    map.flyTo({ center: [lng, lat], zoom: 16 });\r\n    history.push(\"/submit\");\r\n  };\r\n\r\n  const onLongPressEvent = useLongPress(handleAddMarker, {\r\n    isPreventDefault: true,\r\n    delay: 500,\r\n  });\r\n\r\n  // const handleMapMoved = (map, mapEvent) => {\r\n  //   // console.log(mapEvent);\r\n  //   /* eslint-disable no-unused-expressions */\r\n  //   mapEvent.originalEvent?.preventDefault?.();\r\n  //   onMoveEnd(map);\r\n  // };\r\n  console.log(events);\r\n  return (\r\n    <Mapbox\r\n      style=\"mapbox://styles/rektdeckard/ckayd52rb0xzg1imcbyek0g4y\"\r\n      // style=\"mapbox://styles/mapbox/streets-v8\"\r\n      containerStyle={{\r\n        width,\r\n        height,\r\n      }}\r\n      center={\r\n        currentPosition\r\n          ? [currentPosition.longitude, currentPosition.latitude]\r\n          : defaultPosition\r\n      }\r\n      zoom={MAP_DEFAULTS.defaultZoom}\r\n      onStyleLoad={initializeMap}\r\n      onContextMenu={handleAddMarker}\r\n      onMoveEnd={onMoveEnd}\r\n      {...onLongPressEvent}\r\n    >\r\n      <MapIcons />\r\n\r\n      <MapContext.Consumer>\r\n        {(context) => <MapControls context={context} />}\r\n      </MapContext.Consumer>\r\n\r\n      {showVolumetricBuildings && (\r\n        <Layer\r\n          id=\"3d-buildings\"\r\n          type=\"fill-extrusion\"\r\n          sourceId=\"composite\"\r\n          sourceLayer=\"building\"\r\n          filter={[\"==\", \"extrude\", \"true\"]}\r\n          minZoom={14}\r\n          paint={MAP_DEFAULTS.volumetricPainter}\r\n        />\r\n      )}\r\n\r\n      <MapEventLayer\r\n        type={EventType.AID}\r\n        events={nearbyEvents.filter(({ eventType }) => eventType === EventType.AID)}\r\n        onMouseEvents={onMouseEvents}\r\n        visibility={eventFilters.aid}\r\n      />\r\n      <MapEventLayer\r\n        type={EventType.INFO}\r\n        events={nearbyEvents.filter(({ eventType }) => eventType === EventType.INFO)}\r\n        onMouseEvents={onMouseEvents}\r\n        visibility={eventFilters.info}\r\n      />\r\n      <MapEventLayer\r\n        type={EventType.POLICE}\r\n        events={nearbyEvents.filter(\r\n          ({ eventType }) => eventType === EventType.POLICE\r\n        )}\r\n        onMouseEvents={onMouseEvents}\r\n        visibility={eventFilters.police}\r\n      />\r\n      <MapEventLayer\r\n        type={EventType.SAFETY}\r\n        events={nearbyEvents.filter(\r\n          ({ eventType }) => eventType === EventType.SAFETY\r\n        )}\r\n        onMouseEvents={onMouseEvents}\r\n        visibility={eventFilters.safety}\r\n      />\r\n      <MapEventLayer\r\n        type={EventType.EMERGENCY}\r\n        events={nearbyEvents.filter(\r\n          ({ eventType }) => eventType === EventType.EMERGENCY\r\n        )}\r\n        onMouseEvents={onMouseEvents}\r\n        visibility={eventFilters.sos}\r\n      />\r\n\r\n      {markerPosition && (\r\n        <Layer\r\n          id=\"map-marker\"\r\n          type=\"symbol\"\r\n          layout={{\r\n            \"icon-image\": \"PIN\",\r\n            \"icon-anchor\": \"bottom\",\r\n            \"icon-allow-overlap\": true,\r\n          }}\r\n        >\r\n          <Feature coordinates={markerPosition} />\r\n        </Layer>\r\n      )}\r\n      {currentPosition && (\r\n        <Layer\r\n          id=\"location-marker\"\r\n          type=\"symbol\"\r\n          layout={{ \"icon-image\": \"POSITION\", \"icon-allow-overlap\": true }}\r\n        >\r\n          <Feature\r\n            coordinates={[currentPosition.longitude, currentPosition.latitude]}\r\n            properties={currentPosition}\r\n          />\r\n        </Layer>\r\n      )}\r\n    </Mapbox>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { map: state.map, events: state.events };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setMarkerPosition })(MapView);\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Segment,\r\n  Menu,\r\n  Search,\r\n  Sidebar,\r\n  Input,\r\n  Button,\r\n} from \"semantic-ui-react\";\r\n\r\nconst TopSheet = ({ visible, toggleControls }) => {\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  return (\r\n    <Sidebar\r\n      as={Segment}\r\n      inverted\r\n      raised\r\n      direction=\"top\"\r\n      animation=\"push\"\r\n      textAlign=\"center\"\r\n      visible\r\n      style={{ padding: 4 }}\r\n    >\r\n      <Menu inverted borderless widths={3}>\r\n        <Menu.Item> </Menu.Item>\r\n        <Menu.Item fitted>\r\n          <Search\r\n            disabled\r\n            value={query}\r\n            onSearchChange={(event, { value }) => setQuery(value)}\r\n            onFocus={() => toggleControls(false)}\r\n            onBlur={() => toggleControls(true)}\r\n            open={false}\r\n          />\r\n        </Menu.Item>\r\n        <Menu.Menu position=\"right\">\r\n          <Menu.Item>\r\n            <Button circular size=\"large\" color=\"black\" icon=\"setting\" floated=\"right\" />\r\n          </Menu.Item>\r\n        </Menu.Menu>\r\n      </Menu>\r\n    </Sidebar>\r\n  );\r\n};\r\n\r\nexport default TopSheet;\r\n","import React, { Suspense } from \"react\";\r\nimport { withRouter, Switch, Route } from \"react-router-dom\";\r\nimport { Sidebar, Button } from \"semantic-ui-react\";\r\n\r\nimport LoadingPanel from \"./LoadingPanel\";\r\n\r\nconst Loader = <LoadingPanel />;\r\nconst EventList = React.lazy(() => import(\"./EventList\"));\r\nconst EventDetails = React.lazy(() => import(\"./EventDetails\"));\r\nconst EventSubmit = React.lazy(() => import(\"./EventSubmit\"));\r\n\r\nconst BottomSheet = ({ visible }) => {\r\n  // TODO: implement instant submission of high-priotiry SOS event\r\n  const handleSOS = () => window.confirm(\"Send SOS?\");\r\n\r\n  return (\r\n    <Sidebar\r\n      className=\"no-overflow unclickable\"\r\n      animation=\"push\"\r\n      direction=\"bottom\"\r\n      visible={visible}\r\n      style={{ boxShadow: \"none\" }}\r\n    >\r\n      <div style={{ textAlign: \"right\" }}>\r\n        <Button\r\n          className=\"clickable\"\r\n          circular\r\n          compact\r\n          color=\"black\"\r\n          size=\"huge\"\r\n          icon=\"bullhorn\"\r\n          onClick={handleSOS}\r\n        ></Button>\r\n      </div>\r\n      <Switch>\r\n        <Route path=\"/events/:id\">\r\n          <Suspense fallback={Loader}>\r\n            <EventDetails />\r\n          </Suspense>\r\n        </Route>\r\n        <Route exact path=\"/submit\">\r\n          <Suspense fallback={Loader}>\r\n            <EventSubmit />\r\n          </Suspense>\r\n        </Route>\r\n        <Route exact path=\"/sos\">\r\n          <LoadingPanel />\r\n        </Route>\r\n        <Route>\r\n          <Suspense fallback={Loader}>\r\n            <EventList />\r\n          </Suspense>\r\n        </Route>\r\n      </Switch>\r\n    </Sidebar>\r\n  );\r\n};\r\n\r\nexport default withRouter(BottomSheet);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Sidebar } from \"semantic-ui-react\";\r\nimport { getDistance } from \"geolib\";\r\n\r\nimport { initializeUser, initializeGeolocation, getEvents } from \"../actions\";\r\nimport Geolocator from \"./Geolocator\";\r\nimport MapView from \"./MapView\";\r\nimport TopSheet from \"./TopSheet\";\r\nimport BottomSheet from \"./BottomSheet\";\r\n\r\nconst App = ({\r\n  initializeUser,\r\n  initializeGeolocation,\r\n  shouldUseGeolocation,\r\n  defaultPosition,\r\n  getEvents,\r\n}) => {\r\n  const [controlsVisible, setControlsVisible] = useState(true);\r\n\r\n  useEffect(() => {\r\n    initializeUser();\r\n    initializeGeolocation();\r\n    getEvents({\r\n      coordinates: {\r\n        lon: defaultPosition[0],\r\n        lat: defaultPosition[1],\r\n      },\r\n    });\r\n  }, [initializeUser, initializeGeolocation, getEvents, defaultPosition]);\r\n\r\n  const handleMapMove = (mapEvent) => {\r\n    const { lng: lon, lat } = mapEvent.getCenter();\r\n    const { _sw, _ne } = mapEvent.getBounds();\r\n    const meters = getDistance(_sw, _ne);\r\n    // setMapPosition([lon, lat]);\r\n    getEvents({ coordinates: { lon, lat }, radius: meters });\r\n  };\r\n\r\n  const handleMapContextMenu = (mapEvent) => {\r\n    console.log(mapEvent);\r\n  };\r\n\r\n  const handleToggleControls = (visible) => {\r\n    if (typeof visible === \"boolean\") return setControlsVisible(visible);\r\n    setControlsVisible((v) => !v);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {shouldUseGeolocation && <Geolocator />}\r\n      <Sidebar.Pushable className=\"no-overflow\">\r\n        <TopSheet\r\n          visible={controlsVisible}\r\n          toggleControls={handleToggleControls}\r\n        />\r\n        <BottomSheet visible={controlsVisible} />\r\n        <Sidebar.Pusher>\r\n          <MapView\r\n            toggleControls={handleToggleControls}\r\n            onMoveEnd={handleMapMove}\r\n            onContextMenu={handleMapContextMenu}\r\n          />\r\n        </Sidebar.Pusher>\r\n      </Sidebar.Pushable>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    shouldUseGeolocation: state.map.shouldUseGeolocation,\r\n    defaultPosition: state.map.defaultPosition,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  initializeUser,\r\n  initializeGeolocation,\r\n  getEvents,\r\n})(App);\r\n","import { FETCH_EVENTS, SET_EVENT_FILTER, UPDATE_EVENT } from \"../actions\";\r\n\r\nconst INITIAL_STATE = {\r\n  dangerClose: false,\r\n  nearbyEvents: [],\r\n  eventFilters: {\r\n    aid: true,\r\n    info: true,\r\n    police: true,\r\n    safety: true,\r\n    sos: true,\r\n  },\r\n};\r\n\r\nexport default (state = INITIAL_STATE, { type, payload }) => {\r\n  switch (type) {\r\n    case FETCH_EVENTS:\r\n      return {\r\n        ...state,\r\n        nearbyEvents: payload,\r\n      };\r\n    case SET_EVENT_FILTER:\r\n      return {\r\n        ...state,\r\n        eventFilters: {\r\n          ...state.eventFilters,\r\n          payload,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  SET_DEFAULT_POSITION,\r\n  SET_CURRENT_POSITION,\r\n  SET_MARKER_POSITION,\r\n  SET_USE_GEOLOCATION,\r\n} from \"../actions\";\r\n\r\nconst INITIAL_STATE = {\r\n  markerPosition: null,\r\n  currentPosition: null,\r\n  defaultPosition: JSON.parse(localStorage.getItem(SET_DEFAULT_POSITION)) ?? [\r\n    -74.0,\r\n    40.73,\r\n  ],\r\n  shouldUseGeolocation: false,\r\n  showBasicMapFeatures: true,\r\n  showVolumetricBuildings: true,\r\n};\r\n\r\nexport default (state = INITIAL_STATE, { type, payload }) => {\r\n  switch (type) {\r\n    case SET_MARKER_POSITION:\r\n      return {\r\n        ...state,\r\n        markerPosition: payload,\r\n      };\r\n    case SET_CURRENT_POSITION:\r\n      return {\r\n        ...state,\r\n        currentPosition: payload,\r\n      };\r\n    case SET_DEFAULT_POSITION:\r\n      return {\r\n        ...state,\r\n        defaultPosition: payload,\r\n      };\r\n    case SET_USE_GEOLOCATION:\r\n      return {\r\n        ...state,\r\n        shouldUseGeolocation: payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { INITIALIZE_USER, INVALIDATE_USER } from \"../actions\";\r\n\r\nconst INITIAL_STATE = {\r\n  userToken: null,\r\n  validUntil: null,\r\n};\r\n\r\nexport default (state = INITIAL_STATE, { type, payload }) => {\r\n  switch (type) {\r\n    case INITIALIZE_USER:\r\n      return payload;\r\n    case INVALIDATE_USER:\r\n      return INITIAL_STATE;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers, createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport eventsReducer from \"./eventsReducer\";\r\nimport mapReducer from \"./mapReducer\";\r\nimport userReducer from \"./userReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  events: eventsReducer,\r\n  map: mapReducer,\r\n  user: userReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  rootReducer,\r\n  {},\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"remixicon/fonts/remixicon.css\";\r\nimport \"./index.css\";\r\n\r\nimport App from \"./components/App\";\r\nimport store from \"./reducers\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import axios from \"axios\";\r\n\r\nconst API = axios.create({\r\n  baseURL: \"https://likewater-internal.azurewebsites.net/api\",\r\n});\r\n\r\nexport default API;\r\n"],"sourceRoot":""}