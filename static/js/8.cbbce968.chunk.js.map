{"version":3,"sources":["components/EventSubmit.js"],"names":["options","key","text","value","icon","className","style","color","connect","state","markerPosition","map","reportEvent","lon","lat","useState","type","setType","description","setDescription","raised","inverted","padding","as","Subheader","floated","toFixed","Group","inline","circular","option","active","size","Button","onClick","Input","label","placeholder","onChange","event","content"],"mappings":"uMAwBMA,EAAU,CACd,CACEC,IAAK,MACLC,KAAM,MACNC,MAAO,MACPC,KACE,uBACEC,UAAU,kCACVC,MAAO,CAAEC,MAAO,gBAItB,CACEN,IAAK,OACLC,KAAM,OACNC,MAAO,OACPC,KAAM,uBAAGC,UAAU,kCAErB,CACEJ,IAAK,SACLC,KAAM,SACNC,MAAO,SACPC,KAAM,uBAAGC,UAAU,wCAErB,CACEJ,IAAK,SACLC,KAAM,SACNC,MAAO,SACPC,KAAM,uBAAGC,UAAU,+BAErB,CACEJ,IAAK,MACLC,KAAM,MACNC,MAAO,MACPC,KAAM,uBAAGC,UAAU,iCAqDRG,uBAJS,SAACC,GACvB,MAAO,CAAEC,eAAgBD,EAAME,IAAID,kBAGG,CAAEE,iBAA3BJ,EAjDK,SAAC,GAAqC,IAAnCE,EAAkC,EAAlCA,eAAkC,KAAlBE,YAAkB,OACpCF,QADoC,IACpCA,IAAkB,CAAC,EAAG,IADc,mBAChDG,EADgD,KAC3CC,EAD2C,OAE/BC,qBAF+B,mBAEhDC,EAFgD,KAE1CC,EAF0C,OAGjBF,mBAAS,IAHQ,mBAGhDG,EAHgD,KAGnCC,EAHmC,KAKvD,OACE,kBAAC,IAAD,CAASd,UAAU,YAAYe,QAAM,EAACC,UAAQ,EAACf,MAAO,CAAEgB,QAAS,KAC/D,kBAAC,IAAD,CAAQD,UAAQ,EAACE,GAAG,MAApB,eAEE,kBAAC,IAAOC,UAAR,CAAkBC,QAAQ,SAA1B,WAAuCX,EAAIY,QAAQ,GAAnD,aAA0Db,EAAIa,QAC5D,GADF,OAIF,kBAAC,IAAD,CAAML,UAAQ,GACZ,kBAAC,IAAKM,MAAN,CAAYC,QAAM,GAChB,uCACA,kBAAC,IAAMD,MAAP,CAAaE,UAAQ,GAClB7B,EAAQW,KAAI,SAACmB,GAAD,OACX,kBAAC,IAAD,CACEC,OAAQf,IAASc,EAAO3B,MACxBkB,SAAUL,IAASc,EAAO3B,MAE1B6B,KAAK,QACLT,GAAIU,IACJhC,IAAK6B,EAAO7B,IACZiC,QAAS,kBAAMjB,EAAQa,EAAO3B,SAE7B2B,EAAO1B,KACP0B,EAAO5B,WAKhB,kBAAC,IAAKiC,MAAN,CACEC,MAAM,cACNC,YAAY,6BACZlC,MAAOe,EACPoB,SAAU,SAACC,EAAD,OAAUpC,EAAV,EAAUA,MAAV,OAAsBgB,EAAehB,MAEjD,kBAAC,IAAD,CAAQ6B,KAAK,QAAQX,UAAQ,EAACQ,UAAQ,EAACW,QAAQ","file":"static/js/8.cbbce968.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Segment,\r\n  Header,\r\n  Icon,\r\n  Form,\r\n  Divider,\r\n  Button,\r\n  Label,\r\n  Radio,\r\n} from \"semantic-ui-react\";\r\n\r\nimport { reportEvent } from \"../actions\";\r\n\r\nconst sampleEvent = {\r\n  type: \"Water Distribution\",\r\n  description: \"\",\r\n  distance: 250,\r\n  lastActive: \"Just now\",\r\n  icon: \"first-aid-kit\",\r\n  color: \"gainsboro\",\r\n};\r\n\r\nconst options = [\r\n  {\r\n    key: \"aid\",\r\n    text: \"Aid\",\r\n    value: \"aid\",\r\n    icon: (\r\n      <i\r\n        className=\"ri-first-aid-kit-fill ri-lg aid\"\r\n        style={{ color: \"gainsboro\" }}\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    key: \"info\",\r\n    text: \"Info\",\r\n    value: \"info\",\r\n    icon: <i className=\"ri-broadcast-fill ri-lg info\" />,\r\n  },\r\n  {\r\n    key: \"police\",\r\n    text: \"Police\",\r\n    value: \"police\",\r\n    icon: <i className=\"ri-alarm-warning-fill ri-lg police\" />,\r\n  },\r\n  {\r\n    key: \"safety\",\r\n    text: \"Safety\",\r\n    value: \"safety\",\r\n    icon: <i className=\"ri-fire-fill ri-lg safety\" />,\r\n  },\r\n  {\r\n    key: \"sos\",\r\n    text: \"SOS\",\r\n    value: \"sos\",\r\n    icon: <i className=\"ri-lifebuoy-fill ri-lg sos\" />,\r\n  },\r\n];\r\n\r\nconst EventSubmit = ({ markerPosition, reportEvent }) => {\r\n  const [lon, lat] = markerPosition ?? [0, 0];\r\n  const [type, setType] = useState();\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  return (\r\n    <Segment className=\"clickable\" raised inverted style={{ padding: 16 }}>\r\n      <Header inverted as=\"h3\">\r\n        Submit event\r\n        <Header.Subheader floated=\"right\">{`[${lat.toFixed(4)}, ${lon.toFixed(\r\n          4\r\n        )}]`}</Header.Subheader>\r\n      </Header>\r\n      <Form inverted>\r\n        <Form.Group inline>\r\n          <label>Type</label>\r\n          <Label.Group circular>\r\n            {options.map((option) => (\r\n              <Label\r\n                active={type === option.value}\r\n                inverted={type !== option.value}\r\n                // basic\r\n                size=\"large\"\r\n                as={Button}\r\n                key={option.key}\r\n                onClick={() => setType(option.value)}\r\n              >\r\n                {option.icon}\r\n                {option.text}\r\n              </Label>\r\n            ))}\r\n          </Label.Group>\r\n        </Form.Group>\r\n        <Form.Input\r\n          label=\"Description\"\r\n          placeholder=\"E.g. Barricade on Main St.\"\r\n          value={description}\r\n          onChange={(event, { value }) => setDescription(value)}\r\n        />\r\n        <Button size=\"small\" inverted circular content=\"Submit\" />\r\n      </Form>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { markerPosition: state.map.markerPosition };\r\n};\r\n\r\nexport default connect(mapStateToProps, { reportEvent })(EventSubmit);\r\n"],"sourceRoot":""}