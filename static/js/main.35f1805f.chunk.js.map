{"version":3,"sources":["components/MapView.js","components/SideCar.js","components/App.js","reducers/eventsReducer.js","api/index.js","reducers/preferencesReducer.js","actions/types.js","reducers/index.js","serviceWorker.js","index.js"],"names":["Map","ReactMapboxGl","accessToken","defaultZoom","data","mentions","lastMention","location","layerPaint","property","type","stops","MapView","position","onClick","style","height","width","center","zoom","containerStyle","onDragStart","onDragEnd","paint","map","el","index","key","coordinates","properties","SideCar","visible","Sidebar","as","Segment","animation","icon","direction","inverted","vertical","Search","Menu","size","Item","connect","state","preferences","events","useState","defaultPosition","setPosition","areControlsVisible","setControlsVisible","useEffect","navigator","geolocation","getCurrentPosition","geolocationPosition","coords","longitude","latitude","console","error","enableHighAccuracy","maximumAge","timeout","Pushable","className","Pusher","event","log","v","INITIAL_STATE","axios","create","baseURL","dangerClose","nearbyEvents","JSON","parse","localStorage","getItem","eventFilter","rootReducer","combineReducers","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Boolean","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.35f1805f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactMapboxGl, { Layer, Feature } from \"react-mapbox-gl\";\r\n\r\nconst Map = ReactMapboxGl({\r\n  accessToken:\r\n    \"pk.eyJ1IjoicmVrdGRlY2thcmQiLCJhIjoiY2theWJ4OXM0MGhiejJ3cnkzcmk0andiYyJ9.IinlG0vyUvcWhvlAREJXeA\",\r\n});\r\n\r\nconst defaultZoom = [10];\r\n\r\nconst data = [\r\n  {\r\n    mentions: 248 / 50,\r\n    lastMention: 1591135064030,\r\n    location: [-73.978698, 40.685457],\r\n  },\r\n  {\r\n    mentions: 61 / 50,\r\n    lastMention: 1591135010000,\r\n    location: [-74.011379, 40.708201],\r\n  },\r\n  {\r\n    mentions: 120 / 50,\r\n    lastMention: 1591134911238,\r\n    location: [-73.987529, 40.752137],\r\n  },\r\n];\r\n\r\nconst layerPaint = {\r\n  \"heatmap-weight\": {\r\n    property: \"mentions\",\r\n    type: \"exponential\",\r\n    stops: [\r\n      [0, 0],\r\n      [5, 2],\r\n    ],\r\n  },\r\n  // Increase the heatmap color weight weight by zoom level\r\n  // heatmap-ntensity is a multiplier on top of heatmap-weight\r\n  \"heatmap-intensity\": {\r\n    stops: [\r\n      [0, 0],\r\n      [5, 1.2],\r\n    ],\r\n  },\r\n  // Color ramp for heatmap.  Domain is 0 (low) to 1 (high).\r\n  // Begin color ramp at 0-stop with a 0-transparancy color\r\n  // to create a blur-like effect.\r\n  \"heatmap-color\": [\r\n    \"interpolate\",\r\n    [\"linear\"],\r\n    [\"heatmap-density\"],\r\n    0,\r\n    \"rgba(33,102,172,0)\",\r\n    0.25,\r\n    \"rgb(103,169,207)\",\r\n    0.5,\r\n    \"rgb(209,229,240)\",\r\n    0.8,\r\n    \"rgb(253,219,199)\",\r\n    1,\r\n    \"rgb(239,138,98)\",\r\n    2,\r\n    \"rgb(178,24,43)\",\r\n  ],\r\n  // Adjust the heatmap radius by zoom level\r\n  \"heatmap-radius\": {\r\n    stops: [\r\n      [0, 1],\r\n      [5, 50],\r\n    ],\r\n  },\r\n};\r\n\r\nconst MapView = ({ position, onClick }) => {\r\n  if (!position) return null;\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\", width: \"100vw\" }}>\r\n      <Map\r\n        style=\"mapbox://styles/rektdeckard/ckayd52rb0xzg1imcbyek0g4y\"\r\n        center={position}\r\n        zoom={defaultZoom}\r\n        containerStyle={{\r\n          height: \"100%\",\r\n          width: \"100%\",\r\n        }}\r\n        onDragStart={onClick}\r\n        onDragEnd={onClick}\r\n      >\r\n        <Layer type=\"heatmap\" paint={layerPaint}>\r\n          {data.map((el, index) => (\r\n            <Feature key={index} coordinates={el.location} properties={el} />\r\n          ))}\r\n        </Layer>\r\n      </Map>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapView;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Segment,\r\n  Search,\r\n  Icon,\r\n  Menu,\r\n  Sidebar,\r\n} from \"semantic-ui-react\";\r\n\r\nconst SideCar = ({ visible }) => {\r\n  return (\r\n    <>\r\n    <Sidebar\r\n      as={Segment}\r\n      animation=\"overlay\"\r\n      icon=\"labeled\"\r\n      direction=\"top\"\r\n      inverted\r\n      vertical\r\n      visible={visible}\r\n      width=\"thin\"\r\n    >\r\n       <Search />\r\n    </Sidebar>\r\n    <Sidebar\r\n      as={Menu}\r\n      animation=\"overlay\"\r\n      icon=\"labeled\"\r\n      direction=\"bottom\"\r\n      inverted\r\n      size=\"small\"\r\n      visible={visible}\r\n      width=\"thin\"\r\n    >\r\n      <Menu.Item>\r\n        Map\r\n      </Menu.Item>\r\n      <Menu.Item>\r\n        Events\r\n      </Menu.Item>\r\n      <Menu.Item>\r\n        Report\r\n      </Menu.Item>\r\n      <Menu.Item>\r\n        Filter\r\n      </Menu.Item>\r\n      <Menu.Item>\r\n        SOS\r\n      </Menu.Item>\r\n    </Sidebar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SideCar;\r\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Header, Icon, Image, Menu, Segment, Sidebar } from \"semantic-ui-react\";\n\nimport \"./App.css\";\nimport MapView from \"./MapView\";\nimport SideCar from \"./SideCar\";\n\nconst App = ({ events, preferences }) => {\n  const [position, setPosition] = useState(preferences.defaultPosition);\n  const [areControlsVisible, setControlsVisible] = useState(true);\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(\n      (geolocationPosition) => {\n        const {\n          coords: { longitude, latitude },\n        } = geolocationPosition;\n        setPosition([longitude, latitude]);\n      },\n      console.error,\n      { enableHighAccuracy: false, maximumAge: 15000, timeout: 30000 }\n    );\n  }, []);\n\n  const handleMapClick = (event) => {\n    console.log(event);\n    setControlsVisible((v) => !v);\n  };\n\n  return (\n    <Sidebar.Pushable className=\"no-overflow\">\n      <SideCar visible={areControlsVisible} />\n      <Sidebar.Pusher>\n        <MapView position={position} onClick={handleMapClick} />\n      </Sidebar.Pusher>\n    </Sidebar.Pushable>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    preferences: state.preferences,\n    events: state.events,\n  };\n};\n\nexport default connect(mapStateToProps, {})(App);\n","import { FETCH_EVENTS, FETCH_EVENT_DETAILS, UPDATE_EVENT } from \"../actions\";\r\n\r\nconst INITIAL_STATE = {\r\n  dangerClose: false,\r\n  nearbyEvents: [],\r\n};\r\n\r\nexport default (state = INITIAL_STATE, { type, payload }) => {\r\n  switch (type) {\r\n    case FETCH_EVENTS:\r\n      return {\r\n        ...state,\r\n        nearbyEvents: payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst API = axios.create({\r\n  baseURL: \"\",\r\n});\r\n\r\nexport default API;\r\n","import { SET_DEFAULT_POSITION, SET_EVENT_FILTER } from \"../actions\";\r\n\r\nconst INITIAL_STATE = {\r\n  defaultPosition: JSON.parse(localStorage.getItem(SET_DEFAULT_POSITION)) ?? [\r\n    -78.9715041,\r\n    40.7311599,\r\n  ],\r\n  eventFilter: [],\r\n};\r\n\r\nexport default (state = INITIAL_STATE, { type, payload }) => {\r\n  switch (type) {\r\n    case SET_DEFAULT_POSITION:\r\n      return {\r\n        ...state,\r\n        defaultPosition: payload,\r\n      };\r\n    case SET_EVENT_FILTER:\r\n      return {\r\n        ...state,\r\n        eventFilter: payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const FETCH_EVENTS = \"fetch_events\";\r\nexport const FETCH_EVENT_DETAILS = \"fetch_event_details\";\r\nexport const UPDATE_EVENT = \"update_event\";\r\n\r\nexport const SET_EVENT_FILTER = \"update_event_filter\";\r\nexport const SET_DEFAULT_POSITION = \"update_default_position\";\r\n","import { combineReducers, createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport eventsReducer from \"./eventsReducer\";\r\nimport preferencesReducer from \"./preferencesReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  events: eventsReducer,\r\n  preferences: preferencesReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  rootReducer,\r\n  {},\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nimport App from \"./components/App\";\nimport store from \"./reducers\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}